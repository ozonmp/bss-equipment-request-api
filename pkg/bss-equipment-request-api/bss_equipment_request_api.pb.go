// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: ozonmp/bss_equipment_request_api/v1/bss_equipment_request_api.proto

package bss_equipment_request_api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EquipmentRequestStatus int32

const (
	EquipmentRequestStatus_EQUIPMENT_REQUEST_STATUS_UNSPECIFIED EquipmentRequestStatus = 0
	EquipmentRequestStatus_EQUIPMENT_REQUEST_STATUS_DO          EquipmentRequestStatus = 1
	EquipmentRequestStatus_EQUIPMENT_REQUEST_STATUS_IN_PROGRESS EquipmentRequestStatus = 2
	EquipmentRequestStatus_EQUIPMENT_REQUEST_STATUS_DONE        EquipmentRequestStatus = 3
	EquipmentRequestStatus_EQUIPMENT_REQUEST_STATUS_CANCELLED   EquipmentRequestStatus = 4
)

// Enum value maps for EquipmentRequestStatus.
var (
	EquipmentRequestStatus_name = map[int32]string{
		0: "EQUIPMENT_REQUEST_STATUS_UNSPECIFIED",
		1: "EQUIPMENT_REQUEST_STATUS_DO",
		2: "EQUIPMENT_REQUEST_STATUS_IN_PROGRESS",
		3: "EQUIPMENT_REQUEST_STATUS_DONE",
		4: "EQUIPMENT_REQUEST_STATUS_CANCELLED",
	}
	EquipmentRequestStatus_value = map[string]int32{
		"EQUIPMENT_REQUEST_STATUS_UNSPECIFIED": 0,
		"EQUIPMENT_REQUEST_STATUS_DO":          1,
		"EQUIPMENT_REQUEST_STATUS_IN_PROGRESS": 2,
		"EQUIPMENT_REQUEST_STATUS_DONE":        3,
		"EQUIPMENT_REQUEST_STATUS_CANCELLED":   4,
	}
)

func (x EquipmentRequestStatus) Enum() *EquipmentRequestStatus {
	p := new(EquipmentRequestStatus)
	*p = x
	return p
}

func (x EquipmentRequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EquipmentRequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_enumTypes[0].Descriptor()
}

func (EquipmentRequestStatus) Type() protoreflect.EnumType {
	return &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_enumTypes[0]
}

func (x EquipmentRequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EquipmentRequestStatus.Descriptor instead.
func (EquipmentRequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{0}
}

type EquipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeId             uint64                 `protobuf:"varint,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	EquipmentId            uint64                 `protobuf:"varint,3,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	CreatedAt              *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt              *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	DoneAt                 *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=done_at,json=doneAt,proto3" json:"done_at,omitempty"`
	EquipmentRequestStatus EquipmentRequestStatus `protobuf:"varint,8,opt,name=equipment_request_status,json=equipmentRequestStatus,proto3,enum=ozonmp.bss_equipment_request_api.v1.EquipmentRequestStatus" json:"equipment_request_status,omitempty"`
}

func (x *EquipmentRequest) Reset() {
	*x = EquipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentRequest) ProtoMessage() {}

func (x *EquipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentRequest.ProtoReflect.Descriptor instead.
func (*EquipmentRequest) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{0}
}

func (x *EquipmentRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EquipmentRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *EquipmentRequest) GetEquipmentId() uint64 {
	if x != nil {
		return x.EquipmentId
	}
	return 0
}

func (x *EquipmentRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EquipmentRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *EquipmentRequest) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *EquipmentRequest) GetDoneAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DoneAt
	}
	return nil
}

func (x *EquipmentRequest) GetEquipmentRequestStatus() EquipmentRequestStatus {
	if x != nil {
		return x.EquipmentRequestStatus
	}
	return EquipmentRequestStatus_EQUIPMENT_REQUEST_STATUS_UNSPECIFIED
}

type DescribeEquipmentRequestV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipmentRequestId uint64 `protobuf:"varint,1,opt,name=equipment_request_id,json=equipmentRequestId,proto3" json:"equipment_request_id,omitempty"`
}

func (x *DescribeEquipmentRequestV1Request) Reset() {
	*x = DescribeEquipmentRequestV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeEquipmentRequestV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeEquipmentRequestV1Request) ProtoMessage() {}

func (x *DescribeEquipmentRequestV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeEquipmentRequestV1Request.ProtoReflect.Descriptor instead.
func (*DescribeEquipmentRequestV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{1}
}

func (x *DescribeEquipmentRequestV1Request) GetEquipmentRequestId() uint64 {
	if x != nil {
		return x.EquipmentRequestId
	}
	return 0
}

type DescribeEquipmentRequestV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipmentRequest *EquipmentRequest `protobuf:"bytes,1,opt,name=equipment_request,json=equipmentRequest,proto3" json:"equipment_request,omitempty"`
}

func (x *DescribeEquipmentRequestV1Response) Reset() {
	*x = DescribeEquipmentRequestV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeEquipmentRequestV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeEquipmentRequestV1Response) ProtoMessage() {}

func (x *DescribeEquipmentRequestV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeEquipmentRequestV1Response.ProtoReflect.Descriptor instead.
func (*DescribeEquipmentRequestV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeEquipmentRequestV1Response) GetEquipmentRequest() *EquipmentRequest {
	if x != nil {
		return x.EquipmentRequest
	}
	return nil
}

type CreateEquipmentRequestV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeId             uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	EquipmentId            uint64                 `protobuf:"varint,2,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	CreatedAt              *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt              *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	DoneAt                 *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=done_at,json=doneAt,proto3" json:"done_at,omitempty"`
	EquipmentRequestStatus EquipmentRequestStatus `protobuf:"varint,7,opt,name=equipment_request_status,json=equipmentRequestStatus,proto3,enum=ozonmp.bss_equipment_request_api.v1.EquipmentRequestStatus" json:"equipment_request_status,omitempty"`
}

func (x *CreateEquipmentRequestV1Request) Reset() {
	*x = CreateEquipmentRequestV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEquipmentRequestV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEquipmentRequestV1Request) ProtoMessage() {}

func (x *CreateEquipmentRequestV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEquipmentRequestV1Request.ProtoReflect.Descriptor instead.
func (*CreateEquipmentRequestV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{3}
}

func (x *CreateEquipmentRequestV1Request) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *CreateEquipmentRequestV1Request) GetEquipmentId() uint64 {
	if x != nil {
		return x.EquipmentId
	}
	return 0
}

func (x *CreateEquipmentRequestV1Request) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateEquipmentRequestV1Request) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CreateEquipmentRequestV1Request) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *CreateEquipmentRequestV1Request) GetDoneAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DoneAt
	}
	return nil
}

func (x *CreateEquipmentRequestV1Request) GetEquipmentRequestStatus() EquipmentRequestStatus {
	if x != nil {
		return x.EquipmentRequestStatus
	}
	return EquipmentRequestStatus_EQUIPMENT_REQUEST_STATUS_UNSPECIFIED
}

type CreateEquipmentRequestV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipmentRequestId uint64 `protobuf:"varint,1,opt,name=equipment_request_id,json=equipmentRequestId,proto3" json:"equipment_request_id,omitempty"`
}

func (x *CreateEquipmentRequestV1Response) Reset() {
	*x = CreateEquipmentRequestV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEquipmentRequestV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEquipmentRequestV1Response) ProtoMessage() {}

func (x *CreateEquipmentRequestV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEquipmentRequestV1Response.ProtoReflect.Descriptor instead.
func (*CreateEquipmentRequestV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{4}
}

func (x *CreateEquipmentRequestV1Response) GetEquipmentRequestId() uint64 {
	if x != nil {
		return x.EquipmentRequestId
	}
	return 0
}

type ListEquipmentRequestV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListEquipmentRequestV1Request) Reset() {
	*x = ListEquipmentRequestV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEquipmentRequestV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEquipmentRequestV1Request) ProtoMessage() {}

func (x *ListEquipmentRequestV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEquipmentRequestV1Request.ProtoReflect.Descriptor instead.
func (*ListEquipmentRequestV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{5}
}

func (x *ListEquipmentRequestV1Request) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListEquipmentRequestV1Request) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListEquipmentRequestV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*EquipmentRequest `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListEquipmentRequestV1Response) Reset() {
	*x = ListEquipmentRequestV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEquipmentRequestV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEquipmentRequestV1Response) ProtoMessage() {}

func (x *ListEquipmentRequestV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEquipmentRequestV1Response.ProtoReflect.Descriptor instead.
func (*ListEquipmentRequestV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{6}
}

func (x *ListEquipmentRequestV1Response) GetItems() []*EquipmentRequest {
	if x != nil {
		return x.Items
	}
	return nil
}

type RemoveEquipmentRequestV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipmentRequestId uint64 `protobuf:"varint,1,opt,name=equipment_request_id,json=equipmentRequestId,proto3" json:"equipment_request_id,omitempty"`
}

func (x *RemoveEquipmentRequestV1Request) Reset() {
	*x = RemoveEquipmentRequestV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveEquipmentRequestV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEquipmentRequestV1Request) ProtoMessage() {}

func (x *RemoveEquipmentRequestV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEquipmentRequestV1Request.ProtoReflect.Descriptor instead.
func (*RemoveEquipmentRequestV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveEquipmentRequestV1Request) GetEquipmentRequestId() uint64 {
	if x != nil {
		return x.EquipmentRequestId
	}
	return 0
}

type RemoveEquipmentRequestV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Removed bool `protobuf:"varint,1,opt,name=removed,proto3" json:"removed,omitempty"`
}

func (x *RemoveEquipmentRequestV1Response) Reset() {
	*x = RemoveEquipmentRequestV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveEquipmentRequestV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEquipmentRequestV1Response) ProtoMessage() {}

func (x *RemoveEquipmentRequestV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEquipmentRequestV1Response.ProtoReflect.Descriptor instead.
func (*RemoveEquipmentRequestV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveEquipmentRequestV1Response) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

type UpdateEquipmentIDEquipmentRequestV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipmentRequestId uint64 `protobuf:"varint,1,opt,name=equipment_request_id,json=equipmentRequestId,proto3" json:"equipment_request_id,omitempty"`
	EquipmentId        uint64 `protobuf:"varint,2,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
}

func (x *UpdateEquipmentIDEquipmentRequestV1Request) Reset() {
	*x = UpdateEquipmentIDEquipmentRequestV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEquipmentIDEquipmentRequestV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEquipmentIDEquipmentRequestV1Request) ProtoMessage() {}

func (x *UpdateEquipmentIDEquipmentRequestV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEquipmentIDEquipmentRequestV1Request.ProtoReflect.Descriptor instead.
func (*UpdateEquipmentIDEquipmentRequestV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateEquipmentIDEquipmentRequestV1Request) GetEquipmentRequestId() uint64 {
	if x != nil {
		return x.EquipmentRequestId
	}
	return 0
}

func (x *UpdateEquipmentIDEquipmentRequestV1Request) GetEquipmentId() uint64 {
	if x != nil {
		return x.EquipmentId
	}
	return 0
}

type UpdateEquipmentIDEquipmentRequestV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated bool `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *UpdateEquipmentIDEquipmentRequestV1Response) Reset() {
	*x = UpdateEquipmentIDEquipmentRequestV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEquipmentIDEquipmentRequestV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEquipmentIDEquipmentRequestV1Response) ProtoMessage() {}

func (x *UpdateEquipmentIDEquipmentRequestV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEquipmentIDEquipmentRequestV1Response.ProtoReflect.Descriptor instead.
func (*UpdateEquipmentIDEquipmentRequestV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateEquipmentIDEquipmentRequestV1Response) GetUpdated() bool {
	if x != nil {
		return x.Updated
	}
	return false
}

type UpdateStatusEquipmentRequestV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipmentRequestId     uint64                 `protobuf:"varint,1,opt,name=equipment_request_id,json=equipmentRequestId,proto3" json:"equipment_request_id,omitempty"`
	EquipmentRequestStatus EquipmentRequestStatus `protobuf:"varint,2,opt,name=equipment_request_status,json=equipmentRequestStatus,proto3,enum=ozonmp.bss_equipment_request_api.v1.EquipmentRequestStatus" json:"equipment_request_status,omitempty"`
}

func (x *UpdateStatusEquipmentRequestV1Request) Reset() {
	*x = UpdateStatusEquipmentRequestV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusEquipmentRequestV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusEquipmentRequestV1Request) ProtoMessage() {}

func (x *UpdateStatusEquipmentRequestV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusEquipmentRequestV1Request.ProtoReflect.Descriptor instead.
func (*UpdateStatusEquipmentRequestV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateStatusEquipmentRequestV1Request) GetEquipmentRequestId() uint64 {
	if x != nil {
		return x.EquipmentRequestId
	}
	return 0
}

func (x *UpdateStatusEquipmentRequestV1Request) GetEquipmentRequestStatus() EquipmentRequestStatus {
	if x != nil {
		return x.EquipmentRequestStatus
	}
	return EquipmentRequestStatus_EQUIPMENT_REQUEST_STATUS_UNSPECIFIED
}

type UpdateStatusEquipmentRequestV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated bool `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *UpdateStatusEquipmentRequestV1Response) Reset() {
	*x = UpdateStatusEquipmentRequestV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusEquipmentRequestV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusEquipmentRequestV1Response) ProtoMessage() {}

func (x *UpdateStatusEquipmentRequestV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusEquipmentRequestV1Response.ProtoReflect.Descriptor instead.
func (*UpdateStatusEquipmentRequestV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateStatusEquipmentRequestV1Response) GetUpdated() bool {
	if x != nil {
		return x.Updated
	}
	return false
}

var File_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto protoreflect.FileDescriptor

var file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDesc = []byte{
	0x0a, 0x43, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2f, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73,
	0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc3, 0x03, 0x0a, 0x10, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x64, 0x6f, 0x6e, 0x65, 0x41,
	0x74, 0x12, 0x75, 0x0a, 0x18, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73,
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x16, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5e, 0x0a, 0x21, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x14, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x32, 0x02, 0x20, 0x00, 0x52, 0x12, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x22, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x62, 0x0a, 0x11, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x7a, 0x6f,
	0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x10, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xe8, 0x03, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x43, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x6f, 0x6e, 0x65,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x64, 0x6f, 0x6e, 0x65, 0x41, 0x74, 0x12, 0x7f, 0x0a,
	0x18, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3b, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x16, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54,
	0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x12, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x32, 0x0b, 0x30, 0x05, 0x30, 0x14, 0x30,
	0x32, 0x30, 0x64, 0x30, 0xc8, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6d,
	0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5c, 0x0a,
	0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x14, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x12, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x20, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x2a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x14, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52,
	0x12, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02,
	0x20, 0x00, 0x52, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x47, 0x0a, 0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x39, 0x0a, 0x14, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x12, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x7f, 0x0a,
	0x18, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3b, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x16, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x42,
	0x0a, 0x26, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x2a, 0xd8, 0x01, 0x0a, 0x16, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x24, 0x45, 0x51, 0x55, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x51, 0x55, 0x49, 0x50,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x45, 0x51, 0x55, 0x49,
	0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53,
	0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x51, 0x55, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x51, 0x55, 0x49, 0x50, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x32, 0xde, 0x0a,
	0x0a, 0x1d, 0x42, 0x73, 0x73, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xeb, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x46,
	0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e,
	0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x22, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x2f, 0x7b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xd5, 0x01,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x44, 0x2e, 0x6f, 0x7a, 0x6f,
	0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x45, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22,
	0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xcd, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31,
	0x12, 0x42, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73,
	0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xd5, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x31, 0x12, 0x44, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d,
	0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xf0, 0x01,
	0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x4f, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62,
	0x73, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e,
	0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x3a, 0x01, 0x2a,
	0x12, 0xdb, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x56, 0x31, 0x12, 0x4a, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73,
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4b, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0x65,
	0x5a, 0x63, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x7a, 0x6f,
	0x6e, 0x6d, 0x70, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x2d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x3b, 0x62, 0x73, 0x73, 0x5f,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescOnce sync.Once
	file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescData = file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDesc
)

func file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescGZIP() []byte {
	file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescOnce.Do(func() {
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescData)
	})
	return file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDescData
}

var file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_goTypes = []interface{}{
	(EquipmentRequestStatus)(0),                         // 0: ozonmp.bss_equipment_request_api.v1.EquipmentRequestStatus
	(*EquipmentRequest)(nil),                            // 1: ozonmp.bss_equipment_request_api.v1.EquipmentRequest
	(*DescribeEquipmentRequestV1Request)(nil),           // 2: ozonmp.bss_equipment_request_api.v1.DescribeEquipmentRequestV1Request
	(*DescribeEquipmentRequestV1Response)(nil),          // 3: ozonmp.bss_equipment_request_api.v1.DescribeEquipmentRequestV1Response
	(*CreateEquipmentRequestV1Request)(nil),             // 4: ozonmp.bss_equipment_request_api.v1.CreateEquipmentRequestV1Request
	(*CreateEquipmentRequestV1Response)(nil),            // 5: ozonmp.bss_equipment_request_api.v1.CreateEquipmentRequestV1Response
	(*ListEquipmentRequestV1Request)(nil),               // 6: ozonmp.bss_equipment_request_api.v1.ListEquipmentRequestV1Request
	(*ListEquipmentRequestV1Response)(nil),              // 7: ozonmp.bss_equipment_request_api.v1.ListEquipmentRequestV1Response
	(*RemoveEquipmentRequestV1Request)(nil),             // 8: ozonmp.bss_equipment_request_api.v1.RemoveEquipmentRequestV1Request
	(*RemoveEquipmentRequestV1Response)(nil),            // 9: ozonmp.bss_equipment_request_api.v1.RemoveEquipmentRequestV1Response
	(*UpdateEquipmentIDEquipmentRequestV1Request)(nil),  // 10: ozonmp.bss_equipment_request_api.v1.UpdateEquipmentIDEquipmentRequestV1Request
	(*UpdateEquipmentIDEquipmentRequestV1Response)(nil), // 11: ozonmp.bss_equipment_request_api.v1.UpdateEquipmentIDEquipmentRequestV1Response
	(*UpdateStatusEquipmentRequestV1Request)(nil),       // 12: ozonmp.bss_equipment_request_api.v1.UpdateStatusEquipmentRequestV1Request
	(*UpdateStatusEquipmentRequestV1Response)(nil),      // 13: ozonmp.bss_equipment_request_api.v1.UpdateStatusEquipmentRequestV1Response
	(*timestamppb.Timestamp)(nil),                       // 14: google.protobuf.Timestamp
}
var file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_depIdxs = []int32{
	14, // 0: ozonmp.bss_equipment_request_api.v1.EquipmentRequest.created_at:type_name -> google.protobuf.Timestamp
	14, // 1: ozonmp.bss_equipment_request_api.v1.EquipmentRequest.updated_at:type_name -> google.protobuf.Timestamp
	14, // 2: ozonmp.bss_equipment_request_api.v1.EquipmentRequest.deleted_at:type_name -> google.protobuf.Timestamp
	14, // 3: ozonmp.bss_equipment_request_api.v1.EquipmentRequest.done_at:type_name -> google.protobuf.Timestamp
	0,  // 4: ozonmp.bss_equipment_request_api.v1.EquipmentRequest.equipment_request_status:type_name -> ozonmp.bss_equipment_request_api.v1.EquipmentRequestStatus
	1,  // 5: ozonmp.bss_equipment_request_api.v1.DescribeEquipmentRequestV1Response.equipment_request:type_name -> ozonmp.bss_equipment_request_api.v1.EquipmentRequest
	14, // 6: ozonmp.bss_equipment_request_api.v1.CreateEquipmentRequestV1Request.created_at:type_name -> google.protobuf.Timestamp
	14, // 7: ozonmp.bss_equipment_request_api.v1.CreateEquipmentRequestV1Request.updated_at:type_name -> google.protobuf.Timestamp
	14, // 8: ozonmp.bss_equipment_request_api.v1.CreateEquipmentRequestV1Request.deleted_at:type_name -> google.protobuf.Timestamp
	14, // 9: ozonmp.bss_equipment_request_api.v1.CreateEquipmentRequestV1Request.done_at:type_name -> google.protobuf.Timestamp
	0,  // 10: ozonmp.bss_equipment_request_api.v1.CreateEquipmentRequestV1Request.equipment_request_status:type_name -> ozonmp.bss_equipment_request_api.v1.EquipmentRequestStatus
	1,  // 11: ozonmp.bss_equipment_request_api.v1.ListEquipmentRequestV1Response.items:type_name -> ozonmp.bss_equipment_request_api.v1.EquipmentRequest
	0,  // 12: ozonmp.bss_equipment_request_api.v1.UpdateStatusEquipmentRequestV1Request.equipment_request_status:type_name -> ozonmp.bss_equipment_request_api.v1.EquipmentRequestStatus
	2,  // 13: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.DescribeEquipmentRequestV1:input_type -> ozonmp.bss_equipment_request_api.v1.DescribeEquipmentRequestV1Request
	4,  // 14: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.CreateEquipmentRequestV1:input_type -> ozonmp.bss_equipment_request_api.v1.CreateEquipmentRequestV1Request
	6,  // 15: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.ListEquipmentRequestV1:input_type -> ozonmp.bss_equipment_request_api.v1.ListEquipmentRequestV1Request
	8,  // 16: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.RemoveEquipmentRequestV1:input_type -> ozonmp.bss_equipment_request_api.v1.RemoveEquipmentRequestV1Request
	10, // 17: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.UpdateEquipmentIDEquipmentRequestV1:input_type -> ozonmp.bss_equipment_request_api.v1.UpdateEquipmentIDEquipmentRequestV1Request
	12, // 18: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.UpdateStatusEquipmentRequestV1:input_type -> ozonmp.bss_equipment_request_api.v1.UpdateStatusEquipmentRequestV1Request
	3,  // 19: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.DescribeEquipmentRequestV1:output_type -> ozonmp.bss_equipment_request_api.v1.DescribeEquipmentRequestV1Response
	5,  // 20: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.CreateEquipmentRequestV1:output_type -> ozonmp.bss_equipment_request_api.v1.CreateEquipmentRequestV1Response
	7,  // 21: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.ListEquipmentRequestV1:output_type -> ozonmp.bss_equipment_request_api.v1.ListEquipmentRequestV1Response
	9,  // 22: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.RemoveEquipmentRequestV1:output_type -> ozonmp.bss_equipment_request_api.v1.RemoveEquipmentRequestV1Response
	11, // 23: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.UpdateEquipmentIDEquipmentRequestV1:output_type -> ozonmp.bss_equipment_request_api.v1.UpdateEquipmentIDEquipmentRequestV1Response
	13, // 24: ozonmp.bss_equipment_request_api.v1.BssEquipmentRequestApiService.UpdateStatusEquipmentRequestV1:output_type -> ozonmp.bss_equipment_request_api.v1.UpdateStatusEquipmentRequestV1Response
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_init() }
func file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_init() {
	if File_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeEquipmentRequestV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeEquipmentRequestV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEquipmentRequestV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEquipmentRequestV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEquipmentRequestV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEquipmentRequestV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveEquipmentRequestV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveEquipmentRequestV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEquipmentIDEquipmentRequestV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEquipmentIDEquipmentRequestV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusEquipmentRequestV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusEquipmentRequestV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_goTypes,
		DependencyIndexes: file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_depIdxs,
		EnumInfos:         file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_enumTypes,
		MessageInfos:      file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_msgTypes,
	}.Build()
	File_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto = out.File
	file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_rawDesc = nil
	file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_goTypes = nil
	file_ozonmp_bss_equipment_request_api_v1_bss_equipment_request_api_proto_depIdxs = nil
}
